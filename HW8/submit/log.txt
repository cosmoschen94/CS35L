1. First make sure the correct PATH
$ echo $PATH
$ export PATH=/usr/local/cs/bin:$PATH

2. Check the version of sort
$ sort --version
sort 8.24
$ which sort
/usr/local/cs/bin/sort

3. Generate 10,000,000 random double-precision floating point numbers. Each
double-precision floating point number is 8 bytes long.
$ od -An -t f8 -N 80000000 < /dev/urandom | tr -s ' ' '\n' > random.txt

Note: -An option specifies the offset shall not be written
      -t f8 option selects double-precision floating point output format
      /dev/urandom generates pseudo-random numbers
      -N 80000000 option limit dump to 80000000 input bytes
      tr -s ' ' '\n' command replaces all spaces with newline characters

Then I use the following command to delete the very first empty line in random.txt
$ sed -i '1d' random.txt

4. Use time command with appropriate options to time sort -g command on random.txt
Without --parallel option
$ time -p sort -g random.txt > /dev/null
real 35.58
user 198.51
sys 0.57

With --parallel option
$ time -p sort -g --parallel=1 random.txt > /dev/null
real 189.54
user 189.30
sys 0.23

$ time -p sort -g --parallel=2 random.txt > /dev/null
real 103.41
user 196.56
sys 0.37

$ time -p sort -g --parallel=4 random.txt > /dev/null
real 66.09
user 209.71
sys 0.45

$ time -p sort -g --parallel=8 random.txt > /dev/null
real 44.29
user 212.28
sys 0.54

As we can see above, multithreads improve the performance significantly.
However, Amdahl's Law tells us that this kind of improvement to the
system has an end.
